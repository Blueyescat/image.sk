import:
	java.awt.image.BufferedImage
	java.io.ByteArrayInputStream
	java.io.ByteArrayOutputStream
	javax.imageio.ImageIO
	
	ch.njol.skript.lang.Variable
	
	me.iblitzkriegi.vixio.Vixio
	me.iblitzkriegi.vixio.util.UpdatingMessage
	me.iblitzkriegi.vixio.util.Util as VixioUtil
	me.iblitzkriegi.vixio.util.skript.SkriptUtil as VixioSkriptUtil
	
	net.dv8tion.jda.core.EmbedBuilder
	net.dv8tion.jda.core.MessageBuilder
	net.dv8tion.jda.core.entities.User
	net.dv8tion.jda.core.exceptions.RateLimitedException

effect:
	patterns:
		upload (image|img) %object% [with ([(format|file)] type|[file] format) %-string%] [with (message|embed) %-message/string%] to %user/channel% [with %bot/string%] [and store (it|the message) in %-objects%]
		upload [the] [last[ly]] [(created|generated|received|taken)] (image|img) [with ([(format|file)] type|[file] format) %-string%] [with (message|embed) %-message/string%] to %user/channel% [with %bot/string%] [and store (it|the message) in %-objects%]
	parse:
		# skript-mirror bug, it sees the patterns as 32 and 15 in parse section only
		if matched pattern is 32:
			set {_varExpr} to expression-6
		else:
			set {_varExpr} to expression-5
		if {_varExpr} is set:
			if {_varExpr} isn't instance of Variable:
				imagesk parse error "'%{_varExpr}%' is not a variable."
				stop				
		continue
	trigger:
		if matched pattern is 1:
			set {_image} to expression-1
			set {_format} to expression-2
			set {_messageExpr} to expression-3
			set {_channel} to expression-4
			set {_bot} to expression-5
		else:
			set {_image} to last image
			set {_format} to expression-1
			set {_messageExpr} to expression-2
			set {_channel} to expression-3
			set {_bot} to expression-4
		if {_image} is not instance of BufferedImage:
			stop
		delay the current effect
		if {_format} is not set:
			set {_format} to "png"
		if {_messageExpr} is set:
			if {_message} is instance of EmbedBuilder:
				set {_message} to VixioUtil.messageFrom(UpdatingMessage.from(new MessageBuilder().setEmbed({_messageExpr}.build()).build()))
			else:
				set {_message} to VixioUtil.messageFrom({_messageExpr})
			if {_message} is not set:
				continue
		if {_channel} is instance of User:
			set {_messageChannel} to try {_channel}.openPrivateChannel().complete(true)
			if last java error is instance of RateLimitedException:
				Vixio.getErrorHandler().warn("Vixio attempted to open a private channel but was ratelimited")
				continue
		else:
			set {_messageChannel} to {_channel}
		set {_bot} to VixioUtil.botFrom({_bot})
		if {_image}, {_messageChannel} or {_bot} is not set:
			continue
		set {_bindedChannel} to VixioUtil.bindMessageChannel({_bot}, {_messageChannel})
		set {_os} to new ByteArrayOutputStream()
		ImageIO.write({_image}, {_format}, {_os})
		set {_is} to new ByteArrayInputStream({_os}.toByteArray())
		if {_message} is set:
			set {_resultingMessage} to {_bindedChannel}.sendMessage({_message}).addFile({_is}, "image.%{_format}%").complete(true)
		else:
			set {_resultingMessage} to {_bindedChannel}.sendFile({_is}, "image.%{_format}%").complete(true)
		if matched pattern is 1:
			set {_varExpr} to raw expression-6
		else:
			set {_varExpr} to raw expression-5
		if {_varExpr} is set:
			VixioUtil.storeInVar(VixioSkriptUtil.getVariableName({_varExpr}), {_varExpr}, UpdatingMessage.from({_resultingMessage}), event)
		continue