import:
	java.awt.BasicStroke
	java.awt.Color
	java.awt.RenderingHints
	java.awt.image.BufferedImage
	
	ch.njol.skript.lang.Variable

effect draw [a] rectangle [(2¦outline [with width %-number%])] with (width %-number%[( and|,)] [with] height %-number%|1¦height %-number%[( and|,)] [with] width %-number%)[[( and|,)] with %-object%][[( and|,)] with rotation %-number% degree[s] [angle] [using origin location %-number%,[ ]%-number%]] on [(image|img)] %object% [at [location] %-number%,[ ]%-number%] [[and] (store|save) ([[the] result]|it) (in|to) [variable] %-object%]:
	parse:
		if expression-13 is set:
			if expression-13 isn't instance of Variable:
				imagesk parse error "'%expression-13%' is not a variable."
				stop
		continue
	trigger:
		if expression-10 isn't instance of BufferedImage:
			stop
		delay the current effect
		if parse mark is 0 or 2:
			set {_width} to rounded expression-2
			set {_height} to rounded expression-3
		else if parse mark is 1 or 3:
			set {_height} to rounded expression-4
			set {_width} to rounded expression-5
		if expression-11 is set:
			set {_x} to (expression-11) - 1
		else:
			set {_x} to 0
		if expression-12 is set:
			set {_y} to (expression-12) - 1
		else:
			set {_y} to 0
		if raw expression-13 is set:
			set {_image} to imagesk_copiedImage(expression-10)
		else:
			set {_image} to expression-10
		set {_g} to {_image}.createGraphics()
		if imagesk_colorFrom(expression-6) is instance of Color:
			{_g}.setColor(imagesk_colorFrom(expression-6))
		{_g}.setRenderingHint((RenderingHints.KEY_ANTIALIASING!) and (RenderingHints.VALUE_ANTIALIAS_ON!))
		if expression-7 is set:
			if expression-8 and expression-9 are set:
				{_g}.rotate(imagesk_toRadians(expression-7), (expression-8) - 1, (expression-9) - 1)
			else:
				{_g}.rotate(imagesk_toRadians(expression-7), {_x}, {_y})
		if parse mark is 2 or 3:
			if expression-1 is set:
				set {_outlineWidth} to expression-1
			else:
				set {_outlineWidth} to 1
			{_g}.setStroke(new BasicStroke({_outlineWidth}))
			{_g}.drawRect({_x}, {_y}, {_width} and {_height})
		else:
			{_g}.fillRect({_x}, {_y}, {_width} and {_height})
		{_g}.dispose()
		if raw expression-13 is set:
			imagesk set variable (raw expression-13) to {_image} in event
		continue