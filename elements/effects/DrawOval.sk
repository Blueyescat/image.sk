import:
	java.awt.BasicStroke
	java.awt.Color
	java.awt.RenderingHints
	java.awt.image.BufferedImage
	
	ch.njol.skript.lang.Variable

effect draw [a[n]] oval [(10¦outline [with width %-number%])] with (horizontal radius %-number%[( and|,)] [with] vertical radius %-number%|1¦vertical radius %-number%[( and|,)] [with] horizontal radius %-number%)[[( and|,)] [with] %-object%][[( and|,)] with [rotation] %-number% degree[s] [angle] [using origin location %-number%,[ ]%-number%]] on [(image|img)] %object% [at [[center] location] %-number%,[ ]%-number%] [[and] (store|save) ([[the] result]|it) (in|to) [variable] %-object%]:
	parse:
		if expression-13 is set:
			if expression-13 isn't instance of Variable:
				imagesk parse error "'%expression-13%' is not a variable."
				stop
		continue
	trigger:
		if expression-10 isn't instance of BufferedImage:
			stop
		delay the current effect
		if expression-11 is set:
			set {_x} to (expression-11) - 1
		else:
			set {_x} to 0
		if expression-12 is set:
			set {_y} to (expression-12) - 1
		else:
			set {_y} to 0
		if parse mark is 0 or 10:
			if expression-2 or expression-3 is not set:
				continue
			set {_width} to (expression-2 * 2)
			set {_height} to (expression-3 * 2)
		else if parse mark is 1 or 11:
			if expression-4 or expression-5 is not set:
				continue
			set {_height} to (expression-4 * 2)
			set {_width} to (expression-5 * 2)
		if raw expression-13 is set:
			set {_image} to imagesk_copiedImage(expression-10)
		else:
			set {_image} to expression-10
		set {_g} to {_image}.createGraphics()
		if imagesk_colorFrom(expression-6) is instance of Color:
			{_g}.setColor(imagesk_colorFrom(expression-6))
		{_g}.setRenderingHint(RenderingHints.KEY_ANTIALIASING!, RenderingHints.VALUE_ANTIALIAS_ON!)
		if expression-7 is set:
			if expression-8 and expression-9 are set:
				{_g}.rotate(imagesk_toRadians(expression-7), (expression-8) - 1, (expression-9) - 1)
			else:
				{_g}.rotate(imagesk_toRadians(expression-7), {_x}, {_y})
		if parse mark is 10 or 11:
			if expression-1 is set:
				set {_outlineWidth} to expression-1
			else:
				set {_outlineWidth} to 1
			{_g}.setStroke(new BasicStroke({_outlineWidth}, BasicStroke.CAP_ROUND! and 2))
			{_g}.drawOval(({_x} - ({_width} / 2)), ({_y} - ({_height} / 2)), {_width}, {_height})
		else:
			{_g}.fillOval(({_x} - ({_width} / 2)), ({_y} - ({_height} / 2)), {_width}, {_height})
		{_g}.dispose()
		if raw expression-10 is set:
			imagesk set variable raw expression-10 to {_image} in event
		continue