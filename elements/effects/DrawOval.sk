import:
	java.awt.BasicStroke
	java.awt.Color
	java.awt.RenderingHints
	java.awt.image.BufferedImage
	
	ch.njol.skript.lang.Variable

effect draw [a[n]] oval [(10¦outline [with width %-number%])] on [(image|img)] %object% with (0¦(width [radius]|vertical radius) %-number%[( and|,)] [with] (height [radius]|horizontal radius) %-number%|1¦(height [radius]|horizontal radius) %-number%[( and|,)] [with] (width [radius]|vertical radius) %-number%)[[( and|,)] [with] %-object%] [at [[center] location] %-number%( and|,) %-number%] [[and] (store|save) ([[the] result]|it) (in|to) [variable] %-object%]:
	parse:
		if expression-10 is set:
			if expression-10 isn't instance of Variable:
				imagesk parse error "'%expression-10%' is not a variable."
				stop
		continue
	trigger:
		if expression-2 isn't instance of BufferedImage:
			stop
		delay the current effect
		if expression-8 is set:
			set {_x} to expression-8
			set {_x} to {_x} - 1
		else:
			set {_x} to 0
		if expression-9 is set:
			set {_y} to expression-9
			set {_y} to {_y} - 1
		else:
			set {_y} to 0
		if parse mark is 0 or 10:
			if expression-3 or expression-4 is not set:
				continue
			set {_width} to (expression-3 * 2)
			set {_height} to (expression-4 * 2)
		else if parse mark is 1 or 11:
			if expression-5 or expression-6 is not set:
				continue
			set {_height} to (expression-5 * 2)
			set {_width} to (expression-6 * 2)
		if raw expression-10 is set:
			set {_image} to imagesk_copiedImage(expression-2)
		else:
			set {_image} to expression-2
		set {_g} to {_image}.createGraphics()
		if imagesk java color expression-7 is instance of Color:
			{_g}.setColor(imagesk java color expression-7)
		{_g}.setRenderingHint((RenderingHints.KEY_ANTIALIASING!) and (RenderingHints.VALUE_ANTIALIAS_ON!))
		if parse mark is 10 or 11:
			if expression-1 is set:
				set {_outlineWidth} to expression-1
			else:
				set {_outlineWidth} to 1
			{_g}.setStroke(new BasicStroke({_outlineWidth}, (BasicStroke.CAP_ROUND!) and 2))
			{_g}.drawOval(({_x} - ({_width} / 2)), ({_y} - ({_height} / 2)), {_width} and {_height})
		else:
			{_g}.fillOval(({_x} - ({_width} / 2)), ({_y} - ({_height} / 2)), {_width} and {_height})
		{_g}.dispose()
		if raw expression-10 is set:
			imagesk set variable (raw expression-10) to {_image} in event
		continue