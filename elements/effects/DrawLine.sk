import:
	java.awt.BasicStroke
	java.awt.Color
	java.awt.RenderingHints
	java.awt.geom.Line2D$Float as Line2DFloat
	java.awt.image.BufferedImage
	
	ch.njol.skript.lang.Variable

effect draw [a] line [(10¦with ((flat|square) (cap|edge[s])))] [with width %-number%][[( and|,)] [with] %-object%][[( and|,)] with [rotation] %-number% degree[s] [angle] [using origin location %-number%,[ ]%-number%]] on [(image|img)] %object% (from [location] %-number%,[ ]%-number% to %-number%,[ ]%-number%|1¦between locations %-number%,[ ]%-number% and %-number%,[ ]%-number%) [[and] (store|save) ([[the] result]|it) (in|to) [variable] %-object%]:
	parse:
		if expression-15 is set:
			if expression-15 isn't instance of Variable:
				imagesk parse error "'%expression-15%' is not a variable."
				stop
		continue
	trigger:
		if expression-6 isn't instance of BufferedImage:
			stop
		delay the current effect
		if parse mark is 0 or 10:
			set {_x1} to (expression-7) - 1
			set {_y1} to (expression-8) - 1
			set {_x2} to (expression-9) - 1
			set {_y2} to (expression-10) - 1
		else if parse mark is 1 or 11:
			set {_x1} to (expression-11) - 1
			set {_y1} to (expression-12) - 1
			set {_x2} to (expression-13) - 1
			set {_y2} to (expression-14) - 1
		if raw expression-15 is set:
			set {_image} to imagesk_copiedImage(expression-6)
		else:
			set {_image} to expression-6
		set {_g} to {_image}.createGraphics()
		if expression-1 is set:
			set {_width} to expression-1
		else:
			set {_width} to 1
		if parse mark is 10 or 11:
			{_g}.setStroke(new BasicStroke({_width}))
		else:
			{_g}.setStroke(new BasicStroke({_width}, (BasicStroke.CAP_ROUND!) and 2))
		if imagesk_colorFrom(expression-2) is instance of Color:
			{_g}.setColor(imagesk_colorFrom(expression-2))
		{_g}.setRenderingHint((RenderingHints.KEY_ANTIALIASING!) and (RenderingHints.VALUE_ANTIALIAS_ON!))
		if expression-3 is set:
			if expression-4 and expression-5 are set:
				{_g}.rotate(imagesk_toRadians(expression-3), (expression-4) - 1, (expression-5) - 1)
			else:
				{_g}.rotate(imagesk_toRadians(expression-3), {_x}, {_y})
		{_g}.draw(new Line2DFloat({_x1}, {_y1}, {_x2} and {_y2}))
		{_g}.dispose()
		if raw expression-15 is set:
			imagesk set variable (raw expression-15) to {_image} in event
		continue