options:
	# If changing this is really important for you, you need to change it in all imagesk files.
	variable: imagesk # {imagesk::xxx}

import:
	java.awt.Color
	java.lang.String
	
	ch.njol.skript.util.Color as SkriptColor

expression [(image|img)] colo[u]r [from] (%-color%|1¦[hex] %-string%|2¦[rgb[ ]][\(]%-number%, %-number%, %-number%[\)])[[,] [with] (opacity|transparency) %-number% [percent]))]:
	get:
		if parse mark is 0 or 1:
			if parse mark is 0:
				if expression-6 is not set:
					return new Color(expression-1.getBukkitColor().asRGB())
				else:
					set {_color} to expression-1.getBukkitColor()
			else:
				set {_hex} to expression-2
				replace all "##" with "" in {_hex}
				set {_color} to Color.decode("##%{_hex}%")
				if expression-6 is not set:
					return {_color}
			set {_r} to {_color}.getRed()
			set {_g} to {_color}.getGreen()
			set {_b} to {_color}.getBlue()
		else if parse mark is 2:
			set {_r} to expression-3
			set {_g} to expression-4
			set {_b} to expression-5
		loop "r", "g" and "b":
			if {_%loop-value%} is greater than 255:
				set {_%loop-value%} to 255
			else if {_%loop-value%} is smaller than 0:
				set {_%loop-value%} to 0
		if expression-6 is set:
			set {_opacity} to expression-6
		if {{@variable}::useFloatColorMethod} is true:
			set {_r} to (1 / 255) * {_r}
			set {_g} to (1 / 255) * {_g}
			set {_b} to (1 / 255) * {_b}
		if {_opacity} is set:
			if {{@variable}::useFloatColorMethod} is true:
				set {_opacity} to (1 / 100) * {_opacity}
				if {_opacity} is greater than 1:
					set {_opacity} to 1
				else if {_opacity} is smaller than 0:
					set {_opacity} to 0
			else:
				set {_opacity} to (255 / 100) * {_opacity}
				if {_opacity} is greater than 255:
					set {_opacity} to 255
				else if {_opacity} is smaller than 0:
					set {_opacity} to 0
			set {_color} to new Color({_r}, {_g}, {_b}, {_opacity})
		else:
			set {_color} to new Color({_r}, {_g}, {_b})
		return {_color}

expression %color% with (opacity|transparency) %number% [percent]:
	get:
		return color from expression-1 with opacity expression-2

plural expression colo[u]rs %objects%:
	get:
		if expression-2 is set:
			set {_opacity} to expression-2
		loop expressions-1:
			if loop-value is instance of Color:
				add loop-value to {_colors::*}
			else if loop-value is instance of SkriptColor:
				add color from imagesk_skriptColor(loop-value) to {_colors::*}
			else if loop-value is instance of String:
				add color from "%loop-value%" to {_colors::*}
		return {_colors::*}