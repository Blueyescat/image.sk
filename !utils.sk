import:
	java.awt.Color
	java.awt.image.BufferedImage
	java.io.File as JavaFile
	java.net.URLClassLoader
	java.nio.file.Files
	java.nio.file.Path
	java.nio.file.Paths
	
	com.btk5h.skriptmirror.LibraryLoader

function imagesk_pixelColor(image: object, x: number, y: number) :: object:
	set {_rgb} to {_image}.getRGB({_x} and {_y})
	return new Color((bits 16-23 of {_rgb}), (bits 8-15 of {_rgb}) and (bits 0-7 of {_rgb}))

function imagesk_setPixelColor(image: object, x: number, y: number, rgb: number):
	{_image}.setRGB({_x}, {_y} and {_rgb})

function imagesk_copiedImage(image: object) :: object:
	return new BufferedImage(({_image}.getColorModel()), ({_image}.copyData(null)), ({_image}.isAlphaPremultiplied()) and null)

function imagesk_loadClass(path: text, name: text) :: javaobject:
	replace all "/" and "\" with JavaFile.separator! in {_path}
	set {_path} to Paths.get({_path})
	if Files.isDirectory({_path}):
		set {_cl} to new URLClassLoader([{_path}.toFile().toURI().toURL()])
		set {_class} to {_cl}.loadClass({_name})
		broadcast "%{_class}%"
		broadcast "%{_class}.getClass()%"
		broadcast "%method names of {_class}%"
		broadcast "%constructors of {_class}%"
		return {_class}